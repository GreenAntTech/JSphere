!async function(){window.URLPattern||await import("./urlpattern.min.js")}();const allowedOrigins=[""];window.location&&allowedOrigins.push(window.location.origin);export function registerAllowedOrigin(uri){allowedOrigins.push(uri)}const scriptHost={server:!!globalThis.Deno,client:!globalThis.Deno},registeredMessages={},registeredDeviceMessages={};globalThis.addEventListener("message",event=>{if(!event.data)return void console.warn("An invalid message structure was received:",event.data);const message=event.data?event.data.split("::"):"",subject=message[0],data=message[1];let listenerFound=!1;if(!subject)return void console.warn("Missing message subject:",message);if(!allowedOrigins.includes(event.origin))return void console.warn("Message origin not registered:",event.origin);if(registeredDeviceMessages[subject]&&(listenerFound=!0,window.webkit?window.webkit.messageHandlers.Device.postMessage(event.data):window.Device.postMessage(event.data)),registeredMessages[subject]){listenerFound=!0;const jsonData=data?JSON.parse(data):{};registeredMessages[subject](jsonData)}const children=document.querySelectorAll("[data-listening]");for(const childElement of children)childElement._subscribedTo(subject)&&(listenerFound=!0,setTimeout(()=>{const jsonData=data?JSON.parse(data):{};childElement._onMessageReceived(subject,jsonData)},0));listenerFound||console.warn(`No message listener was found for the subject '${subject}'`)},!1);export function subscribeTo(subject,func){subject&&"string"==typeof subject?registeredMessages[subject]=func:console.warn("A subject must be specified when subscribing to a message:",subject)}export function deviceSubscribesTo(subject){subject&&"string"==typeof subject?registeredDeviceMessages[subject]=!0:console.warn("A subject must be specified when subscribing to a message:",subject)}export function postMessage(subject,data,target){if(void 0===target&&(target=window),void 0===data&&(data={}),"function"!=typeof target.postMessage)throw"target: Must be a window object";target.postMessage(`${subject}::${JSON.stringify(data)}`)}const registeredRoutes={};export function registerRoute(path,handler){void 0!==path&&"string"==typeof path?"function"==typeof handler?registeredRoutes[path]=handler:console.warn("A valid hanlder must be specified when registering a route:",handler):console.warn("A path must be specified when registering a route:",path)}globalThis.addEventListener("popstate",async()=>{const path=window.location.href;for(const routePath in registeredRoutes){const route={path:routePath,handler:registeredRoutes[routePath]},pattern=new window.URLPattern({pathname:route.path});if(pattern.test(path)){let params=pattern.exec(path).pathname.groups;params[0]&&(params={path:params[0]});const searchParams=new URLSearchParams(window.location.search);for(const[key,value]of searchParams.entries())params[key]=value;await route.handler(params);break}}},!1);export function navigateTo(path){if(void 0===path)globalThis.dispatchEvent(new Event("popstate"));else{if(path==window.location.pathname)return;if("string"!=typeof path)return void console.warn("Provided path must of type string:",path);window.history.pushState({},"",path),dispatchEvent(new Event("popstate"))}}class Feature{featureFlags=[];constructor(flags){this.featureFlags=flags}flag(obj){for(const prop in obj){let found=!1;const flags=prop.split(",");for(const flag of flags)if(this.featureFlags.includes(flag)||"default"==flag){obj[prop](),found=!0;break}if(found)break}}}const featureFlags=function(){if(scriptHost.client){const featureFlags=window.document.cookie.split("; ").find(row=>row.startsWith("featureFlags="));if(featureFlags)return featureFlags.split("=")[1].split(":")}return[]}();export const feature=new Feature(featureFlags);class RenderingStatus{rootElement=null;set document(value){this.rootElement=value}get atClient(){return"client"===this.rootElement.getAttribute("data-rendering-status")}get atServer(){return"server"===this.rootElement.getAttribute("data-rendering-status")}get loaded(){return null===this.rootElement.getAttribute("data-rendering-status")}}const renderingStatus=new RenderingStatus;export async function runAtClient(fn){(renderingStatus.atClient||renderingStatus.loaded)&&await fn()}export async function runOnLoaded(fn){renderingStatus.loaded&&await fn()}export async function runOnce(fn){(renderingStatus.atServer||renderingStatus.loaded)&&await fn()}const componentFactory={};export function registerComponent(type,initFunction){componentFactory[type]=initFunction}export async function createDocumentFromFile(path,ctx,config){if(scriptHost.server){const file=await ctx.getPackageItem(path);if(file){const content=(new TextDecoder).decode(file.content);return await createDocument(content,ctx,config)}throw"File Not Found"}return""}export async function createDocument(html,ctx,config){if(scriptHost.server){const document=ctx.parser.parseFromString(html,"text/html"),appContext={_componentTemplates:[],document:document,getResource:async path=>{const file=await ctx.getPackageItem(path);if(file){const content=(new TextDecoder).decode(file.content);return content}throw"File Not Found"},importModule:async url=>await import(url+`?eTag=${ctx.domain.hostname}:${ctx.domain.cacheDTS}`),loadCaptions:async url=>{const module=await import(url+`?eTag=${ctx.domain.hostname}:${ctx.domain.cacheDTS}`),captions=module.captions;return(value,...args)=>{let caption=captions[value]||value;if(args&&args.length>0)for(let i=0;i<args.length;i++)caption=caption.replaceAll("$"+(i+1),args[i]);return caption}}};document.documentElement.setAttribute("data-rendering-status","server"),await render(config,document.documentElement,appContext);for(const item of appContext._componentTemplates)item.parent.insertBefore(item.template,item.parent.children[0]);return document.documentElement.outerHTML}return""}export async function render(config,element,ctx){if(element?renderingStatus.document=element.ownerDocument.documentElement:(element=document.documentElement,renderingStatus.document=element),ctx||(ctx={_componentTemplates:[],document:renderingStatus.document,getResource:async path=>{const response=await fetch(path);if(200===response.status){const content=await response.text();return content}throw"File Not Found"},importModule:async url=>await import(url),loadCaptions:async url=>{const module=await import(url),captions=module.captions;return(value,...args)=>{let caption=captions[value]||value;if(args&&args.length>0)for(let i=0;i<args.length;i++)caption=caption.replaceAll("$"+(i+1),args[i]);return caption}}}),createComponent(element,ctx),renderingStatus.atServer){element.setAttribute("data-id","root");const children=element.querySelectorAll("[data-id]");for(const childElement of children)childElement.setAttribute("data-parent","root"),createComponent(childElement,ctx),childElement._render&&await childElement._render(config),element._components[childElement.getAttribute("data-id")]=childElement;element.setAttribute("data-rendering-status","client")}else if(renderingStatus.atClient){const children=element.querySelectorAll('[data-parent="root"]');for(const childElement of children)createComponent(childElement,ctx),childElement._render&&await childElement._render(config),element._components[childElement.getAttribute("data-id")]=childElement;element.removeAttribute("data-rendering-status")}else{element.setAttribute("data-id","root");const children=element.querySelectorAll("[data-id]");for(const childElement of children)childElement.setAttribute("data-parent","root"),createComponent(childElement,ctx),childElement._render&&await childElement._render(config),element._components[childElement.getAttribute("data-id")]=childElement;navigateTo()}return element._components}export function createComponent(element,ctx){if(element._extend)return;const _messageListeners={};let _childComponents={},_state={},_template=null;Object.defineProperties(element,{_extend:{value:obj=>{const props={};for(const prop in obj)"render"==prop?props["_"+prop]={value:async props=>{if("object"!=typeof props&&(props={}),element._renderAtClient&&scriptHost.server)return;const propObject=obj[prop],attrs={};for(const attr of element.attributes)attr.name.startsWith("data-is-")&&(attrs[attr.name.substring(8)]=attr.value||!0);props=Object.assign(attrs,props),await propObject(props),renderingStatus.atServer&&element.setAttribute("data-is-state",JSON.stringify(_state))}}:"function"==typeof obj[prop]?props["_"+prop]={value:obj[prop]}:props["_"+prop]=obj[prop];Object.defineProperties(element,props)}},_components:{get:()=>_childComponents},_onMessageReceived:{value:(subject,data)=>{_messageListeners[subject]&&_messageListeners[subject](data)}},_renderAtClient:{get:()=>"client"===element.getAttribute("data-render-at")},_subscribedTo:{value:subject=>!!_messageListeners[subject]},_subscribeTo:{value:(subject,func)=>{_messageListeners[subject]=func,element.setAttribute("data-listening","true")}},_template:{set:value=>{_template=value},get:()=>_template},_unsubscribeTo:{value:subject=>{delete _messageListeners[subject],0===Object.keys(_messageListeners).length&&element.removeAttribute("data-listening")}},_useState:{value:(state,obj)=>(renderingStatus.atClient?element.hasAttribute("data-is-state")&&(Object.assign(state,obj),Object.assign(state,JSON.parse(element.getAttribute("data-is-state"))),element.removeAttribute("data-is-state")):(Object.assign(state,obj),_state=state),state)},_useTemplate:{value:(template,func)=>(renderingStatus.atServer?(template=sanitize(template),_childComponents={},loadTemplate(element,template),parseTemplate(element,ctx)):renderingStatus.atClient?(element._renderAtClient&&(_childComponents={},loadTemplate(element,template)),parseTemplate(element,ctx)):func?setTimeout(()=>{template.startsWith("/")&&template===element.getAttribute("data-view-template")||(_childComponents={},loadTemplate(element,template),parseTemplate(element,ctx),func())},0):(_childComponents={},loadTemplate(element,template),parseTemplate(element,ctx)),element._components)},_useTemplateUrl:{value:async(url,func)=>{if(renderingStatus.atServer)_childComponents={},await loadTemplateUrl(element,ctx,url),parseTemplate(element,ctx);else if(renderingStatus.atClient)element._renderAtClient&&(_childComponents={},await loadTemplateUrl(element,ctx,url)),parseTemplate(element,ctx);else if(func)setTimeout(async()=>{url!==element.getAttribute("data-view-template")&&(_childComponents={},await loadTemplateUrl(element,ctx,url),parseTemplate(element,ctx),func())},0);else{if(url===element.getAttribute("data-view-template"))return;_childComponents={},await loadTemplateUrl(element,ctx,url),parseTemplate(element,ctx)}return element._components}}});const type=element.getAttribute("data-is");type&&(componentFactory[type]?componentFactory[type](element,ctx):console.warn(`The component type '${type}' is not registered.`))}function loadTemplate(element,template){template&&(renderingStatus.atClient&&null!==element.getAttribute("data-view-template")||(element.setAttribute("data-view-template","component"),element.innerHTML=template))}async function loadTemplateUrl(element,ctx,url){if(!url)return;if(renderingStatus.atClient&&null!==element.getAttribute("data-view-template"))return;element.setAttribute("data-view-template",url);const template=await ctx.getResource(url);element.innerHTML=template}function parseTemplate(element,ctx){if(renderingStatus.atServer){const templates=element.querySelectorAll("template");for(const template of templates)ctx._componentTemplates.push({parent:template.parentElement,template:template}),template.parentElement._template=template.parentElement.removeChild(template);const children=element.querySelectorAll("[data-id]");for(const childElement of children)childElement.setAttribute("data-parent",element.getAttribute("data-id")),createComponent(childElement,ctx),element._components[childElement.getAttribute("data-id")]=childElement}else if(renderingStatus.atClient){const templates=element.querySelectorAll("template");for(const template of templates)template.parentElement._template=template;if(element._renderAtClient){const children=element.querySelectorAll("[data-id]");for(const childElement of children)childElement.setAttribute("data-parent",element.getAttribute("data-id")),createComponent(childElement,ctx),element._components[childElement.getAttribute("data-id")]=childElement}else{const children=element.querySelectorAll(`[data-parent="${element.getAttribute("data-id")}"]`);for(const childElement of children)createComponent(childElement,ctx),element._components[childElement.getAttribute("data-id")]=childElement}}else{const templates=element.querySelectorAll("template");for(const template of templates)template.parentElement._template=template;const children=element.querySelectorAll("[data-id]");for(const childElement of children)createComponent(childElement,ctx),element._components[childElement.getAttribute("data-id")]=childElement}}function sanitize(code){const sanitizedCode=code.replaceAll(/\?eTag=[a-zA-Z0-9:]+[\"]/g,'"').replaceAll(/\?eTag=[a-zA-Z0-9:]+[\']/g,"'");return sanitizedCode}registerComponent("Repeater",(element,ctx)=>{element._extend({render:props=>{element._useTemplate(""),element._visible=props.visible||!0},add:id=>{let clone,children;element._components[id]?(clone=element._components[id],children=clone.querySelectorAll(`[data-parent="${id}"]`)):(clone=element._template.content.firstElementChild.cloneNode(!0),clone.setAttribute("data-id",id),clone.setAttribute("data-parent",element.getAttribute("data-id")),element.appendChild(clone),createComponent(clone,ctx),element._components[id]=clone,children=clone.querySelectorAll("[data-id]"));for(const childElement of children)childElement.setAttribute("data-parent",id),createComponent(childElement,ctx),clone._components[childElement.getAttribute("data-id")]=childElement;return clone._components},removeAll:()=>{if(renderingStatus.loaded){element.innerHTML="";for(const item in element._components)delete element._components[item]}},visible:{set:value=>{element.style.display=value?"":"none"},get:()=>""===element.style.display}})}),registerComponent("Link",element=>{element._extend({render:props=>{"function"!=typeof props.onclick&&element.hasAttribute("onclick")&&(props.onclick=element.onclick),element._disabled=!!props.disabled,element._hidden=!!props.hidden,element._href=props.href,element._onclick=props.onclick||(()=>{}),element._value=props.value},click:()=>{element.click()},disabled:{set:value=>{"boolean"==typeof value&&(value?element.setAttribute("disabled","true"):element.removeAttribute("disabled"))},get:()=>!!element.getAttribute("disabled")},hidden:{set:value=>{"boolean"==typeof value&&(element.style.display=value?"none":"inline-block")},get:()=>"none"==element.style.display},href:{set:value=>{"string"==typeof value&&(element.href=value)},get:()=>element.href},onclick:{set:value=>{"function"==typeof value&&(element.onclick=event=>{element._disabled||element._hidden||!1!==value()&&(navigateTo(element._href),event.preventDefault())})}},value:{set:value=>{"string"==typeof value&&(element.innerHTML=value)},get:()=>element.innerHTML}})});